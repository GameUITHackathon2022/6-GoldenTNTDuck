{"ast":null,"code":"var _jsxFileName = \"/home/hoaithi/git/uit-hackathon-main-template/src/components/Profile/Rightbar.jsx\";\nimport { Avatar, AvatarGroup, Box, Divider, ImageList, ImageListItem, List, ListItem, Typography } from '@mui/material';\nimport React from 'react';\nimport { mockAvatar, mockConversations, mockPictures } from '../../data';\nimport ItemAvatarConversation from './Items/ItemAvatarConversation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Rightbar = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flex: 2,\n    p: 2,\n    sx: {\n      display: {\n        xs: 'none',\n        sm: 'block'\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: 100,\n        children: \"Online Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarGroup, {\n        max: 7,\n        children: mockAvatar.map(_ref => {\n          let {\n            name,\n            link,\n            id\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: name,\n            src: link\n          }, `key-${id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: 100,\n        mt: 2,\n        mb: 2,\n        children: \"Latest Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n        cols: 3,\n        rowHeight: 100,\n        gap: 5,\n        children: mockPictures.map(_ref2 => {\n          let {\n            alt,\n            link,\n            id\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(ImageListItem, {\n            sx: {\n              margin: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: link,\n              alt: alt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, `key-${id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: 100,\n        mt: 2,\n        children: \"Latest Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '100%',\n          maxWidth: 360,\n          bgcolor: 'background.paper'\n        },\n        children: mockConversations.map(data => /*#__PURE__*/_createElement(ItemAvatarConversation, {\n          ...data,\n          key: `key-${data.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Rightbar;\nexport default Rightbar;\nvar _c;\n$RefreshReg$(_c, \"Rightbar\");","map":{"version":3,"names":["Avatar","AvatarGroup","Box","Divider","ImageList","ImageListItem","List","ListItem","Typography","React","mockAvatar","mockConversations","mockPictures","ItemAvatarConversation","Rightbar","display","xs","sm","map","name","link","id","alt","margin","width","maxWidth","bgcolor","data"],"sources":["/home/hoaithi/git/uit-hackathon-main-template/src/components/Profile/Rightbar.jsx"],"sourcesContent":["import {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Divider,\n  ImageList,\n  ImageListItem,\n  List,\n  ListItem,\n  Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { mockAvatar, mockConversations, mockPictures } from '../../data';\nimport ItemAvatarConversation from './Items/ItemAvatarConversation';\n\nconst Rightbar = () => {\n  return (\n    <Box flex={2} p={2} sx={{ display: { xs: 'none', sm: 'block' } }}>\n      <Box position=\"fixed\">\n        <Typography variant=\"h6\" fontWeight={100}>\n          Online Friends\n        </Typography>\n        <AvatarGroup max={7}>\n          {mockAvatar.map(({ name, link, id }) => (\n            <Avatar alt={name} src={link} key={`key-${id}`} />\n          ))}\n        </AvatarGroup>\n\n        <Typography variant=\"h6\" fontWeight={100} mt={2} mb={2}>\n          Latest Photos\n        </Typography>\n        <ImageList cols={3} rowHeight={100} gap={5}>\n          {mockPictures.map(({ alt, link, id }) => (\n            <ImageListItem key={`key-${id}`} sx={{ margin: 1 }}>\n              <img src={link} alt={alt} />\n            </ImageListItem>\n          ))}\n        </ImageList>\n\n        <Typography variant=\"h6\" fontWeight={100} mt={2}>\n          Latest Conversations\n        </Typography>\n        <List\n          sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\n        >\n          {mockConversations.map((data) => (\n            <ItemAvatarConversation {...data} key={`key-${data.id}`} />\n          ))}\n        </List>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Rightbar;\n"],"mappings":";AAAA,SACEA,MAAM,EACNC,WAAW,EACXC,GAAG,EACHC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbC,IAAI,EACJC,QAAQ,EACRC,UAAU,QACL,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,YAAY;AACxE,OAAOC,sBAAsB,MAAM,gCAAgC;AAAC;AAAA;AAEpE,MAAMC,QAAQ,GAAG,MAAM;EACrB,oBACE,QAAC,GAAG;IAAC,IAAI,EAAE,CAAE;IAAC,CAAC,EAAE,CAAE;IAAC,EAAE,EAAE;MAAEC,OAAO,EAAE;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAQ;IAAE,CAAE;IAAA,uBAC/D,QAAC,GAAG;MAAC,QAAQ,EAAC,OAAO;MAAA,wBACnB,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,UAAU,EAAE,GAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE5B,eACb,QAAC,WAAW;QAAC,GAAG,EAAE,CAAE;QAAA,UACjBP,UAAU,CAACQ,GAAG,CAAC;UAAA,IAAC;YAAEC,IAAI;YAAEC,IAAI;YAAEC;UAAG,CAAC;UAAA,oBACjC,QAAC,MAAM;YAAC,GAAG,EAAEF,IAAK;YAAC,GAAG,EAAEC;UAAK,GAAO,OAAMC,EAAG,EAAC;YAAA;YAAA;YAAA;UAAA,QAAI;QAAA,CACnD;MAAC;QAAA;QAAA;QAAA;MAAA,QACU,eAEd,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,UAAU,EAAE,GAAI;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE1C,eACb,QAAC,SAAS;QAAC,IAAI,EAAE,CAAE;QAAC,SAAS,EAAE,GAAI;QAAC,GAAG,EAAE,CAAE;QAAA,UACxCT,YAAY,CAACM,GAAG,CAAC;UAAA,IAAC;YAAEI,GAAG;YAAEF,IAAI;YAAEC;UAAG,CAAC;UAAA,oBAClC,QAAC,aAAa;YAAmB,EAAE,EAAE;cAAEE,MAAM,EAAE;YAAE,CAAE;YAAA,uBACjD;cAAK,GAAG,EAAEH,IAAK;cAAC,GAAG,EAAEE;YAAI;cAAA;cAAA;cAAA;YAAA;UAAG,GADT,OAAMD,EAAG,EAAC;YAAA;YAAA;YAAA;UAAA,QAEf;QAAA,CACjB;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ,eAEZ,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,UAAU,EAAE,GAAI;QAAC,EAAE,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEnC,eACb,QAAC,IAAI;QACH,EAAE,EAAE;UAAEG,KAAK,EAAE,MAAM;UAAEC,QAAQ,EAAE,GAAG;UAAEC,OAAO,EAAE;QAAmB,CAAE;QAAA,UAEjEf,iBAAiB,CAACO,GAAG,CAAES,IAAI,iBAC1B,eAAC,sBAAsB;UAAA,GAAKA,IAAI;UAAE,GAAG,EAAG,OAAMA,IAAI,CAACN,EAAG,EAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACzD;MAAC;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KArCIP,QAAQ;AAuCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}